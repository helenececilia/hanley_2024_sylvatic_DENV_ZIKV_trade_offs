---
title: "Comparison of Zika Virus Transmission From Native and Novel Non-Human Primate Hosts to Aedes albopictus (Hanley et al. 2023) and Dengue Virus Transmission From Humans to Aedes aegypti (Nguyen et al. 2013, Duong et al. 2015, Long et al. 2019)"
author: "Helene Cecilia"
format: html
---

```{r}
#| label: load-packages
#| echo: false

rm(list=ls())

## Loading Packages  ------------------
library(tidyverse)
library(bbmle) # for mle2, parnames
library(emdbook) # for dbetabinom
library(ggplot2)
library(nls2)
library(mgcv) # for rmvn, gam
library(scales) # for alpha function
library(funrar) # for matrix_to_stack
library(readxl)
library(patchwork)
library(tmvtnorm) # for truncated multi variate normal rtmvnorm
library(investr) # for predFit
library(DHARMa)
library(effects)
library(nlstools)
library(monochromeR)
library(ggtext) # for element_markdown
library(cowplot)
library(magick)
library(glmmTMB)
library(writexl) # for write_xlsx

## Set Work Directory ------------------------------------------------------
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) # set to source file location
getwd()

## Load source files ------------------
source('Dose_Response_Functions.R')

## -------------------------------
# set.seed(3)
tolerance = 1e-7 

save_path <- "../output/result_files/transmission_to_mosquitoes/zika_sylvatic_vs_dengue_literature/"
```


```{r}
#| label: data-loading-and-formatting
#| echo: false

# ZIKV cyno data formatting -----
df_tmp <- read.csv("../data/Table_S3_Sylvatic_ZIKV_Cynomolgus_Macaques.csv",
                   sep = "\t", dec = ".")
df_tmp <- df_tmp[,c("ID","Sex","Final.Treatment","Day.Post.Infection","Viremia.deduced",
                    "Number.of.mosquitoes.that.engorged.AND.survived.to.titer",
                    "Number.of.mosquitoes.with.detectable.body.infection",
                    "Number.of.mosquitoes.with.detectable.leg.infection")]

colnames(df_tmp) <- c("ID","Sex","Final.Treatment","Day.Post.Infection","Viremia_log10_corr",
                      "fed_surv_mosq_transm","body_mosq_transm_raw", "leg_mosq_transm_raw")

# selection :
# remove control individuals
# do not remove viremia 0 : some transmitted to mosquitoes !!
# keep all with non NA body_mosq_transm_raw and leg_mosq_transm_raw (but keep 0)

select_body <- df_tmp[!is.na(df_tmp$Viremia_log10_corr) & !is.na(df_tmp$body_mosq_transm_raw) & df_tmp$Final.Treatment != "Control",]
select_leg <- df_tmp[!is.na(df_tmp$Viremia_log10_corr) & !is.na(df_tmp$leg_mosq_transm_raw) & df_tmp$Final.Treatment != "Control",]

zikv_cy_body <- select_body[,c("ID","Viremia_log10_corr","fed_surv_mosq_transm","body_mosq_transm_raw")]
zikv_cy_leg <- select_leg[,c("ID","Viremia_log10_corr","fed_surv_mosq_transm","leg_mosq_transm_raw")]

colnames(zikv_cy_body) <- c("ID","log_V","N","k")
zikv_cy_body$paper <- "zikv"
zikv_cy_body$disease_class <- "unknown"
zikv_cy_body$serotype <- NA

colnames(zikv_cy_leg) <- c("ID","log_V","N","k")
zikv_cy_leg$paper <- "zikv"
zikv_cy_leg$disease_class <- "unknown"
zikv_cy_leg$serotype <- NA

# Exclude 0,0 points which are too constraining for fitting
zikv_cy_body <- dplyr::filter(zikv_cy_body, !(log_V == 0 & k == 0))
zikv_cy_leg <- dplyr::filter(zikv_cy_leg, !(log_V == 0 & k == 0))

# ZIKV squirrel data formatting -----
df_tmp <- read.csv("../data/Table_S4_Sylvatic_ZIKV_Squirrel_Monkeys.csv",
                   sep = "\t", dec = ".")
df_tmp <- df_tmp[,c("ID","Sex","Final.Treatment","Day.Post.Infection","Viremia.deduced",
                    "Number.of.mosquitoes.that.engorged.AND.survived.to.titer",
                    "Number.of.mosquitoes.with.detectable.body.infection",
                    "Number.of.mosquitoes.with.detectable.leg.infection")]

colnames(df_tmp) <- c("ID","Sex","Final.Treatment","Day.Post.Infection","Viremia_pfu_corr",
                      "fed_surv_mosq_transm","body_mosq_transm_raw", "leg_mosq_transm_raw")

# selection :
# remove control individuals
# do not remove viremia 0 : some transmitted to mosquitoes !!
# keep all with non NA body_mosq_transm_raw and leg_mosq_transm_raw (but keep 0)

select_body <- df_tmp[!is.na(df_tmp$Viremia_pfu_corr) & !is.na(df_tmp$body_mosq_transm_raw) & df_tmp$Final.Treatment != "Control",]
select_leg <- df_tmp[!is.na(df_tmp$Viremia_pfu_corr) & !is.na(df_tmp$leg_mosq_transm_raw) & df_tmp$Final.Treatment != "Control",]

# log transform viremia
select_body$Viremia_log10_corr <- log10(select_body$Viremia_pfu_corr + 1)
select_leg$Viremia_log10_corr <- log10(select_leg$Viremia_pfu_corr + 1)

zikv_sq_body <- select_body[,c("ID","Viremia_log10_corr","fed_surv_mosq_transm","body_mosq_transm_raw")]
zikv_sq_leg <- select_leg[,c("ID","Viremia_log10_corr","fed_surv_mosq_transm","leg_mosq_transm_raw")]

colnames(zikv_sq_body) <- c("ID","log_V","N","k")
zikv_sq_body$paper <- "zikv"
zikv_sq_body$disease_class <- "unknown"
zikv_sq_body$serotype <- NA

colnames(zikv_sq_leg) <- c("ID","log_V","N","k")
zikv_sq_leg$paper <- "zikv"
zikv_sq_leg$disease_class <- "unknown"
zikv_sq_leg$serotype <- NA

# Exclude 0,0 points which are too constraining for fitting
zikv_sq_body <- dplyr::filter(zikv_sq_body, !(log_V == 0 & k == 0))
zikv_sq_leg <- dplyr::filter(zikv_sq_leg, !(log_V == 0 & k == 0))

# Merged datasets ----
zikv_all_body <- rbind(zikv_cy_body, zikv_sq_body)
zikv_all_leg <- rbind(zikv_cy_leg, zikv_sq_leg)

# Summary stats ----
# mean(zikv_cy_body$k/zikv_cy_body$N)
# mean(zikv_cy_leg$k/zikv_cy_leg$N)
# mean(zikv_sq_body$k/zikv_sq_body$N)
# mean(zikv_sq_leg$k/zikv_sq_leg$N)
# sum(zikv_cy_body$k)/sum(zikv_cy_body$N)
# sum(zikv_cy_leg$k)/sum(zikv_cy_leg$N)
# sum(zikv_sq_body$k)/sum(zikv_sq_body$N)
# sum(zikv_sq_leg$k)/sum(zikv_sq_leg$N)

# Data from the literature  ------

duong_df <- read.csv("../data/literature/Duong.csv") 
duong_df$paper <- "duong"
duong_df$plasma_viremia <- NULL
colnames(duong_df) <- c("ID","disease_class","serotype","N","k","log_V","paper")


nguyen_df <- read.csv("../data/literature/Nguyen.csv")
summary(as.factor(nguyen_df$Serotype)) # all serotypes
nguyen_df$paper <- "nguyen"
nguyen_df$disease_class <- "unknown"
colnames(nguyen_df) <- c("ID","serotype","log_V","N","k","paper","disease_class")
nguyen_df <- filter(nguyen_df, !(log_V == 0 & k == 0)) # 0 observations removed

# Note : we removed datapoints with zero viremia and no transmission to mosquitoes
# and those with viremia or mosquito not titered
long_body_df <- read.csv("../data/literature/Long_bodies.csv",
                         dec = ".", sep = "\t")
long_head_df <- read.csv("../data/literature/Long_heads.csv",
                         dec = ".", sep = "\t")


```

```{r}
#| label: dose-resp-fitting-BODY
#| echo: false

# Find good starting values : done only once -----
# (for ZIKV then used for others)
# these starting values were hard coded in the appropriate optim functions in Dose_Response_Functions.R

# pred_log <- LogFunction(seq(0,10,0.1), log_beta0 = 5, beta1 = 0.8) #ok
# plot(zikv_data$log_V, zikv_data$k/zikv_data$N)
# lines(seq(0,10,0.1), pred_log)

# pred_log <- Ferguson(seq(0,10,0.1), theta0 = 5, theta1 = 3) #ok
# plot(zikv_data$log_V, zikv_data$k/zikv_data$N)
# lines(seq(0,10,0.1), pred_log)

# pred_log <- Hill(seq(0,10,0.1), gamma0 = 137, gamma1 = 3.2) #ok
# plot(zikv_data$log_V, zikv_data$k/zikv_data$N)
# lines(seq(0,10,0.1), pred_log)

# Find best functional form for dose-response curve -----

# ZIKV squirrel and cyno together -----

zikv_body <- rbind(zikv_cy_body, zikv_sq_body)
dose_resp_function_selection(zikv_body,"sylv_ZIKV_all_BODY")
# AICc and other command outputs are printed at the end of the chunk and not in the console (not very convenient, sorry). You can click the "Show in New Window" button to have a new window dedicated to outputs

#             AICc        df
# binom_Log	135.2832	2		
# betabinom_Log	124.0304	3	: SELECTED	
# binom_Ferg	139.8902	2		
# betabinom_Ferg	126.9704	3		
# binom_Hill	139.5581	2		
# betabinom_Hill	128.0383	3	


zikv_betabinom_Log <- readRDS(paste0(save_path,"betabinom_Log_sylv_ZIKV_all_BODY.rds"))

# Check how it looks
pred <- LogFunction(seq(0.1,8.15, length.out = 100),
                    zikv_betabinom_Log@coef[1],
                    zikv_betabinom_Log@coef[2])
ggplot() + geom_point(aes(x = zikv_body$log_V,
                          y = zikv_body$k/zikv_body$N)) +
  geom_line(aes(x = seq(0.1,8.15, length.out = 100),
                y = pred))

zikv_betabinom_Log@coef
confint(zikv_betabinom_Log, method = "quad")
# log_beta0 4.16 [3.71 ; 4.60]
# beta1 0.96 [0.57 ; 1.35]
# overdispersion 5.20 [0.02 ; 10.38] 


# ZIKV cyno -----

dose_resp_function_selection(zikv_cy_body,"sylv_ZIKV_cyno_BODY")

#             AICc        df
# binom_Log	37.58452	2		
# betabinom_Log	41.53126	3		
# binom_Ferg	36.75367	2		: SELECTED
# betabinom_Ferg	40.90191	3		
# binom_Hill	40.78785	2		
# betabinom_Hill	44.37477	3	

zikv_cy_binom_Ferg <- readRDS(paste0(save_path,"binom_Ferg_sylv_ZIKV_cyno_BODY.rds"))

# Check how it looks
pred <- Ferguson(seq(0.1,8.15, length.out = 100),
                    exp(zikv_cy_binom_Ferg@coef[1]),
                    zikv_cy_binom_Ferg@coef[2])
ggplot() + geom_point(aes(x = zikv_cy_body$log_V,
                          y = zikv_cy_body$k/zikv_cy_body$N)) +
  geom_line(aes(x = seq(0.1,8.15, length.out = 100),
                y = pred))

zikv_cy_binom_Ferg@coef
confint(zikv_cy_binom_Ferg, method = "quad")
# log_theta0 1.43 [1.37 ; 1.49]
# theta1 5.23 [3.23 ; 7.23]
exp(zikv_cy_binom_Ferg@coef)
exp(confint(zikv_cy_binom_Ferg, method = "quad")) # to transform log.theta0
# theta0 4.17 [3.93 ; 4.43] 


# ZIKV squirrel -----

dose_resp_function_selection(zikv_sq_body,"sylv_ZIKV_squirrel_BODY")

#             AICc        df
# binom_Log	82.31582	2		
# betabinom_Log	79.57606	3		: SELECTED
# binom_Ferg	82.56010	2		
# betabinom_Ferg	80.53789	3		
# binom_Hill	82.50344	2		
# betabinom_Hill	80.85316	3


# If you want to choose between a betabinom and a binom one,
# you can use likelihood ratio test because they're nested models
# https://stats.stackexchange.com/questions/407154/can-log-likelihood-be-used-to-compare-a-binomial-model-to-its-beta-binomial-eq
zikv_sq_binom_Log <- readRDS(paste0(save_path,"binom_Log_sylv_ZIKV_squirrel_BODY.rds"))
zikv_sq_betabinom_Log <- readRDS(paste0(save_path,"betabinom_Log_sylv_ZIKV_squirrel_BODY.rds"))

confint(zikv_sq_betabinom_Log, method = "quad")
# overdispersion CI contains zero, which justifies doing the LRT

lrt(LL0 = zikv_sq_binom_Log@details$value,
    LL1 = zikv_sq_betabinom_Log@details$value,
    df0 = 2, df1 = 3)
# select betabinom
# $L01
# [1] 5.368336
# 
# $df
# [1] 1
# 
# $`p-value`
# [1] 0.02050553

# Check how it looks
pred <- LogFunction(seq(0.1,8.15, length.out = 100),
                    zikv_sq_betabinom_Log@coef[1],
                    zikv_sq_betabinom_Log@coef[2])
ggplot() + geom_point(aes(x = zikv_sq_body$log_V,
                          y = zikv_sq_body$k/zikv_sq_body$N)) +
  geom_line(aes(x = seq(0.1,8.15, length.out = 100),
                y = pred))

zikv_sq_betabinom_Log@coef
confint(zikv_sq_betabinom_Log, method = "quad")
# log_beta0 5.00 [4.07 ; 5.94]
# beta1 0.70 [0.36 ; 1.04]
# overdispersion 8.58 [-3.36 ; 20.53] contains 0


# Nguyen -----
# solution is a parameter to decide how we handle small values. It doesn't have a big impact
# DENV1
nguyen_pfu1_sol2 <- dose_resp_conversion_and_selection(data = nguyen_df,
                                                       serotype = 1,
                                                       solution = 2,
                                                       filename = "DENV1_Nguyen_BODY")

# binom_Log	137.1043	2		
# betabinom_Log	107.6264	3	: SELECTED
# binom_Ferg	141.4691	2		
# betabinom_Ferg	108.0963	3		
# binom_Hill	156.6133	2		
# betabinom_Hill	113.2086	3

# DENV2 
nguyen_pfu2_sol2 <- dose_resp_conversion_and_selection(data = nguyen_df,
                                                       serotype = 2,
                                                       solution = 2,
                                                       filename = "DENV2_Nguyen_BODY")

# binom_Log	92.90815	2		
# betabinom_Log	69.71317	3		: SELECTED
# binom_Ferg	93.72020	2		
# betabinom_Ferg	69.98977	3		
# binom_Hill	99.11092	2		
# betabinom_Hill	70.28101	3

# DENV3 
nguyen_pfu3_sol2 <- dose_resp_conversion_and_selection(data = nguyen_df,
                                                       serotype = 3,
                                                       solution = 2,
                                                       filename = "DENV3_Nguyen_BODY")

# binom_Log	135.75777	2		
# betabinom_Log	76.38505	3	: SELECTED
# binom_Ferg	134.43301	2		
# betabinom_Ferg	76.50524	3		
# binom_Hill	133.36817	2		
# betabinom_Hill	76.55301	3

# DENV4 
nguyen_pfu4_sol2 <- dose_resp_conversion_and_selection(data = nguyen_df,
                                                       serotype = 4,
                                                       solution = 2,
                                                       filename = "DENV4_Nguyen_BODY")

# binom_Log	460.4540	2		
# betabinom_Log	235.7943	3		: SELECTED
# binom_Ferg	461.0496	2		
# betabinom_Ferg	235.9748	3		
# binom_Hill	461.6207	2		
# betabinom_Hill	236.0666	3

# Long et al. ------

# Viremia already in log10 FFU/ml so no need for conversion

dose_resp_function_selection(long_body_df, "DENV2_Long_BODY")

# binom_Log	534.3576	2		
# betabinom_Log	226.5532	3		: SELECTED
# binom_Ferg	1800438.5318	2		
# betabinom_Ferg	1800171.8049	3		
# binom_Hill	1800441.8841	2		
# betabinom_Hill	1800171.9520	3

```

```{r}
#| label: dose-resp-fitting-LEG
#| echo: false

# Find best functional form for dose-response curve -----

# ZIKV squirrel and cyno together -----
zikv_leg <- rbind(zikv_cy_leg, zikv_sq_leg)

dose_resp_function_selection(zikv_leg,"sylv_ZIKV_all_LEG")

# binom_Log	158.2999	2		
# betabinom_Log	121.5190	3		: SELECTED
# binom_Ferg	164.4323	2		
# betabinom_Ferg	123.5834	3		
# binom_Hill	175.2178	2		
# betabinom_Hill	126.7618	3

zikv_betabinom_Log <- readRDS(paste0(save_path,"betabinom_Log_sylv_ZIKV_all_LEG.rds"))

# Check how it looks
pred <- LogFunction(seq(0.1,8.15, length.out = 100),
                    zikv_betabinom_Log@coef[1],
                    zikv_betabinom_Log@coef[2])
ggplot() + geom_point(aes(x = zikv_leg$log_V,
                          y = zikv_leg$k/zikv_leg$N)) +
  geom_line(aes(x = seq(0.1,8.15, length.out = 100),
                y = pred))

coef(zikv_betabinom_Log)
confint(zikv_betabinom_Log, method = "quad")
# 2.86 [2.32 ; 3.41] # log_beta0
# 0.94 [0.56 ; 1.33] # beta1
# 2.64 [0.57 ; 4.71] # overdispersion
exp(coef(zikv_betabinom_Log)) # to transform log.beta0
exp(confint(zikv_betabinom_Log, method = "quad")) # to transform log.beta0
# 17.47 [10.13 ; 30.13] # beta0

# ZIKV cyno -----

dose_resp_function_selection(zikv_cy_leg,"sylv_ZIKV_cyno_LEG")

# binom_Log	47.27156	2		
# betabinom_Log	46.72506	3		: SELECTED
# binom_Ferg	48.20606	2		
# betabinom_Ferg	46.87987	3		
# binom_Hill	54.40722	2		
# betabinom_Hill	49.87716	3

zikv_cy_binom_Log <- readRDS(paste0(save_path,"binom_Log_sylv_ZIKV_cyno_LEG.rds"))
zikv_cy_betabinom_Log <- readRDS(paste0(save_path,"betabinom_Log_sylv_ZIKV_cyno_LEG.rds"))

confint(zikv_cy_betabinom_Log, method = "quad")
# overdispersion CI contains zero, which justifies doing the LRT

lrt(LL0 = zikv_cy_binom_Log@details$value,
    LL1 = zikv_cy_betabinom_Log@details$value,
    df0 = 2, df1 = 3)
# select betabinom
# $L01
# [1] 4.832218
# 
# $df
# [1] 1
# 
# $`p-value`
# [1] 0.02793268


# Check how it looks
pred <- LogFunction(seq(0.1,8.15, length.out = 100),
                    zikv_cy_betabinom_Log@coef[1],
                    zikv_cy_betabinom_Log@coef[2])
ggplot() + geom_point(aes(x = zikv_cy_leg$log_V,
                          y = zikv_cy_leg$k/zikv_cy_leg$N)) +
  geom_line(aes(x = seq(0.1,8.15, length.out = 100),
                y = pred))

coef(zikv_cy_betabinom_Log)
confint(zikv_cy_betabinom_Log, method = "quad")
# 3.84 [3.35 ; 4.32] # log_beta0
# 1.59 [0.54 ; 2.64] # beta1
# 9.08 [-6.10 ; 24.27] # overdispersion, contains 0
exp(coef(zikv_cy_betabinom_Log)) # to transform log.beta0
exp(confint(zikv_cy_betabinom_Log, method = "quad")) # to transform log.beta0
# 46.32 [28.49 ; 75.33] # beta0

# ZIKV squirrel -----

dose_resp_function_selection(zikv_sq_leg,"sylv_ZIKV_squirrel_LEG")

# binom_Log	101.74254	2		
# betabinom_Log	77.50173	3		: SELECTED
# binom_Ferg	105.47797	2		
# betabinom_Ferg	78.85349	3		
# binom_Hill	113.60097	2		
# betabinom_Hill	81.60184	3	

zikv_sq_betabinom_Log <- readRDS(paste0(save_path,"betabinom_Log_sylv_ZIKV_squirrel_LEG.rds"))

# Check how it looks
pred <- LogFunction(seq(0.1,8.15, length.out = 100),
                    zikv_sq_betabinom_Log@coef[1],
                    zikv_sq_betabinom_Log@coef[2])
ggplot() + geom_point(aes(x = zikv_sq_leg$log_V,
                          y = zikv_sq_leg$k/zikv_sq_leg$N)) +
  geom_line(aes(x = seq(0.1,8.15, length.out = 100),
                y = pred))

coef(zikv_sq_betabinom_Log)
confint(zikv_sq_betabinom_Log, method = "quad")
# 2.53 [1.95 ; 3.12] # log_beta0
# 1.12 [0.59 ; 1.64] # beta1
# 2.31 [-0.02 ; 4.65] # overdispersion, contains 0
exp(coef(zikv_sq_betabinom_Log)) # to transform log.beta0
exp(confint(zikv_sq_betabinom_Log, method = "quad")) # to transform log.beta0
# 12.57 [7.00 ; 22.58] # beta0

# Duong -----
duong_pfu1_sol2 <- dose_resp_conversion_and_selection(data = duong_df,
                                                      serotype = 1,
                                                      solution = 2,
                                                      filename = "DENV1_Duong_LEG")

#                       AICc df
# binom_Log         785.8197  2
# betabinom_Log     200.6688  3 : SELECTED
####### something probably went wrong with the others ########
# binom_Ferg     400726.8703  2
# betabinom_Ferg 400178.1329  3
# binom_Hill     400736.9442  2
# betabinom_Hill 400180.3824  3

duong_pfu2_sol2 <- dose_resp_conversion_and_selection(data = duong_df,
                                                      serotype = 2,
                                                      solution = 2,
                                                      filename = "DENV2_Duong_LEG")
#                       AICc df
# binom_Log         311.2971  2
# betabinom_Log     152.9813  3 : SELECTED
# binom_Ferg     400345.0092  2
# betabinom_Ferg 600141.5704  3
# binom_Hill     600311.6137  2
# betabinom_Hill 600141.7483  3

duong_pfu4_sol2 <- dose_resp_conversion_and_selection(data = duong_df,
                                                      serotype = 4,
                                                      solution = 2,
                                                      filename = "DENV4_Duong_LEG")
#                     AICc df
# binom_Log      166.64203  2
# betabinom_Log   88.22499  3
# binom_Ferg     164.75226  2
# betabinom_Ferg  88.04619  3
# binom_Hill     166.66921  2
# betabinom_Hill  87.98409  3 : SELECTED

# Long et al. ------

# Viremia already in log10 FFU/ml so no need for conversion

dose_resp_function_selection(long_head_df, "DENV2_Long_HEADS")

# binom_Log	714.7398	2		
# betabinom_Log	199.7241	3		: SELECTED
# binom_Ferg	1000675.6536	2		
# betabinom_Ferg	1000168.4207	3		
# binom_Hill	1000675.3522	2		
# betabinom_Hill	1000168.4262	3

```


```{r}
#| label: suppl-DENV-fit-and-data-BODY
#| echo: false

nguyen_pfu1_sol2 <- conversion_and_small_values_correction(nguyen_df,
                                                          serotype = 1,
                                                          solution = 2)
nguyen_pfu2_sol2 <- conversion_and_small_values_correction(nguyen_df,
                                                          serotype = 2,
                                                          solution = 2)
nguyen_pfu3_sol2 <- conversion_and_small_values_correction(nguyen_df,
                                                          serotype = 3,
                                                          solution = 2)
nguyen_pfu4_sol2 <- conversion_and_small_values_correction(nguyen_df,
                                                          serotype = 4,
                                                          solution = 2) 

best1_nguyen <- readRDS(paste0(save_path,"betabinom_Log_DENV1_Nguyen_BODY.rds"))
best2_nguyen <- readRDS(paste0(save_path,"betabinom_Log_DENV2_Nguyen_BODY.rds"))
best3_nguyen <- readRDS(paste0(save_path,"betabinom_Log_DENV3_Nguyen_BODY.rds"))
best4_nguyen <- readRDS(paste0(save_path,"betabinom_Log_DENV4_Nguyen_BODY.rds"))

best2_long_body <- readRDS(paste0(save_path,"betabinom_Log_DENV2_Long_BODY.rds"))

best_zikv_sq_body <- readRDS(paste0(save_path,"betabinom_Log_sylv_ZIKV_squirrel_BODY.rds"))
best_zikv_cy_body <- readRDS(paste0(save_path,"binom_Ferg_sylv_ZIKV_cyno_BODY.rds"))
best_zikv_all_body <- readRDS(paste0(save_path,"betabinom_Log_sylv_ZIKV_all_BODY.rds"))

# Plot
predframe <- seq(0,10,length.out = 60)

fit1_nguyen <- LogFunction(log_V = predframe,
                          log_beta0 = as.numeric(best1_nguyen@coef[1]),
                          beta1 = as.numeric(best1_nguyen@coef[2]))

fit2_nguyen <- LogFunction(log_V = predframe,
                           log_beta0 = best2_nguyen@coef[1],
                          beta1 = best2_nguyen@coef[2])

fit3_nguyen <- LogFunction(log_V = predframe,
                           log_beta0 = as.numeric(best3_nguyen@coef[1]),
                           beta1 = as.numeric(best3_nguyen@coef[2]))

fit4_nguyen <- LogFunction(log_V = predframe,
                           log_beta0 = as.numeric(best4_nguyen@coef[1]),
                           beta1 = as.numeric(best4_nguyen@coef[2]))

fit2_long_body <- LogFunction(log_V = predframe,
                         log_beta0 = best2_long_body@coef[1],
                         beta1 = best2_long_body@coef[2])

fit_zikv_sq_body <- LogFunction(log_V = predframe,
                                 log_beta0 = as.numeric(best_zikv_sq_body@coef[1]),
                                 beta1 = as.numeric(best_zikv_sq_body@coef[2]))

fit_zikv_cy_body <- Ferguson(log_V = predframe,
                             theta0 = exp(as.numeric(best_zikv_cy_body@coef[1])),
                             theta1 = as.numeric(best_zikv_cy_body@coef[2]))

fit_zikv_all_body <- LogFunction(log_V = predframe,
                                 log_beta0 = as.numeric(best_zikv_all_body@coef[1]),
                                 beta1 = as.numeric(best_zikv_all_body@coef[2]))

pred_b <- data.frame(dose = rep(predframe,8),
                   resp = c(fit_zikv_all_body,
                            fit_zikv_sq_body,
                            fit_zikv_cy_body,
                            fit1_nguyen,
                            fit2_nguyen,
                            fit3_nguyen,
                            fit4_nguyen,
                            fit2_long_body),
                   type_exact = rep(c("zikv all", "zikv sq", "zikv cy",
                                      "nguyen1", "nguyen2", "nguyen3", "nguyen4",
                                      "long2"), each = length(predframe)),
                   virus = rep(c("ZIKV all",
                                 "ZIKV squirrel",
                                 "ZIKV cyno",
                                 "DENV-1",
                                 "DENV-2",
                                 "DENV-3",
                                 "DENV-4",
                                 "DENV-2"), each = length(predframe)))


# Each curve with the corresponding data
# Tests to find shades of blue
# generate_palette("#2b8cbe", modification = "go_both_ways",
#                  n_colours = 7, view_palette = T,
#                  view_labels = T)
# generate_palette("blue", modification = "go_both_ways",
#                  n_colours = 7, view_palette = T,
#                  view_labels = T)
# generate_palette("cyan", modification = "go_darker",
#                  n_colours = 7, view_palette = T,
#                  view_labels = T)
# generate_palette("darkblue", modification = "go_lighter",
#                  n_colours = 7, view_palette = T,
#                  view_labels = T)

my_colors <- c("Dengue virus 1" = "#2A2A2A",
               "Dengue virus 2a" = "#555555",
               "Dengue virus 2b" = "#7F7F7F",
               "Dengue virus 3" = "#AAAAAA",
               "Dengue virus 4" = "#D4D4D4")

# write_xlsx(nguyen_pfu1_sol2,"../data/Source_Data_FigS6A.xlsx")
# write_xlsx(nguyen_pfu2_sol2,"../data/Source_Data_FigS6C.xlsx")
# write_xlsx(nguyen_pfu3_sol2,"../data/Source_Data_FigS6G.xlsx")
# write_xlsx(nguyen_pfu4_sol2,"../data/Source_Data_FigS6H.xlsx")
# write_xlsx(long_body_df,"../data/Source_Data_FigS6E.xlsx")

p1n <- ggplot() + geom_line(data = pred_b[pred_b$type_exact == "nguyen1",],
                            aes(x = dose, y = resp, color = "Dengue virus 1"),
                            linewidth = 1.3, alpha = 0.9) +
  geom_point(data = nguyen_pfu1_sol2,
             aes(x = log_V, y = k/N, size = N, color = "Dengue virus 1"),
             alpha = 0.7) +
  theme_classic() +
  labs(y = "Prob mosquito body infection",
       x = "",
       size = "Sample size") +
  ggtitle("A - Dengue virus 1") +
    scale_x_continuous(limits = c(0,8.15),
                     expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.03,0.04))) +
  scale_size_continuous(limits=c(1,30),breaks=c(5,15,25),
                        range = c(0,15)) +
  scale_color_manual(values = my_colors, guide = "none") +
  theme(axis.text = element_text(size = 30),
        plot.title = element_text(size = 30),
        legend.position = "right",
        legend.title = element_text(size = 30),
        legend.text = element_text(size = 30),
        axis.title.y = element_text(size = 30,
                                    margin = margin(r = 15)),
        axis.title.x = element_text(size = 30,
                                    margin = margin(t = 15)))


p2n <- ggplot() + geom_line(data = pred_b[pred_b$type_exact == "nguyen2",],
                            aes(x = dose, y = resp, color = "Dengue virus 2a"),
                            linewidth = 1.3, alpha = 0.9) +
  geom_point(data = nguyen_pfu2_sol2,
             aes(x = log_V, y = k/N, size = N, color = "Dengue virus 2a"),
             alpha = 0.7) +
  theme_classic() +
  labs(y = "Prob mosquito body infection",
       x = "",
       size = "Sample size") +
  ggtitle("C - Dengue virus 2") +
    scale_x_continuous(limits = c(0,8.15),
                     expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.03,0.04))) +
  scale_size_continuous(limits=c(1,30),breaks=c(5,15,25),
                        range = c(0,15)) +
  scale_color_manual(values = my_colors, guide = "none") +
  theme(axis.text = element_text(size = 30),
        plot.title = element_text(size = 30),
        legend.position = "right",
        legend.title = element_text(size = 30),
        legend.text = element_text(size = 30),
        axis.title.y = element_text(size = 30,
                                    margin = margin(r = 15)),
        axis.title.x = element_text(size = 30,
                                    margin = margin(t = 15)))


p3n <- ggplot() + geom_line(data = pred_b[pred_b$type_exact == "nguyen3",],
                            aes(x = dose, y = resp, color = "Dengue virus 3"),
                            linewidth = 1.3, alpha = 0.9) +
  geom_point(data = nguyen_pfu3_sol2,
             aes(x = log_V, y = k/N, size = N, color = "Dengue virus 3"),
             alpha = 0.7) +
  theme_classic() +
  labs(y = "Prob mosquito body infection",
       x = "",
       size = "Sample size") +
  ggtitle("G - Dengue virus 3") +
    scale_x_continuous(limits = c(0,8.15),
                     expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.03,0.04))) +
  scale_size_continuous(limits=c(1,30),breaks=c(5,15,25),
                        range = c(0,15)) +
  scale_color_manual(values = my_colors, guide = "none") +
  theme(axis.text = element_text(size = 30),
        plot.title = element_text(size = 30),
        legend.position = "right",
        legend.title = element_text(size = 30),
        legend.text = element_text(size = 30),
        axis.title.y = element_text(size = 30,
                                    margin = margin(r = 15)),
        axis.title.x = element_text(size = 30,
                                    margin = margin(t = 15)))


p4n <- ggplot() + geom_line(data = pred_b[pred_b$type_exact == "nguyen4",],
                            aes(x = dose, y = resp, color = "Dengue virus 4"),
                            linewidth = 1.3, alpha = 0.9) +
  geom_point(data = nguyen_pfu4_sol2,
             aes(x = log_V, y = k/N, size = N, color = "Dengue virus 4"),
             alpha = 0.7) +
  theme_classic() +
  labs(y = "Prob mosquito body infection",
       x = bquote("Virus titer ("*log[10]~"PFU/ml)"),
       size = "Sample size") +
  ggtitle("H - Dengue virus 4") +
    scale_x_continuous(limits = c(0,8.15),
                     expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.03,0.04))) +
  scale_size_continuous(limits=c(1,30),breaks=c(5,15,25),
                        range = c(0,15)) +
  scale_color_manual(values = my_colors, guide = "none") +
  theme(axis.text = element_text(size = 30),
        plot.title = element_text(size = 30),
        legend.position = "right",
        legend.title = element_text(size = 30),
        legend.text = element_text(size = 30),
        axis.title.y = element_text(size = 30,
                                    margin = margin(r = 15)),
        axis.title.x = element_text(size = 30,
                                    margin = margin(t = 15)))

p2lb <- ggplot() + geom_line(data = pred_b[pred_b$type_exact == "long2",],
                            aes(x = dose, y = resp, color = "Dengue virus 2b"),
                            linewidth = 1.3, alpha = 0.9) +
  geom_point(data = long_body_df,
             aes(x = log_V, y = k/N, size = N, color = "Dengue virus 2b"),
             alpha = 0.7) +
  theme_classic() +
  labs(y = "Prob mosquito body infection",
       x = "",
       size = "Sample size") +
  ggtitle("E - Dengue virus 2") +
  scale_x_continuous(limits = c(0,8.15),
                     expand = expansion(add = c(0.1,0.1))) +
  scale_y_continuous(limits = c(0,1.05),
                     expand = expansion(add = c(0.03,0.04))) +
  scale_size_continuous(limits=c(1,50),breaks=c(5,15,25,35,45),
                        range = c(0,25)) +
  scale_color_manual(values = my_colors, guide = "none") +
  theme(axis.text = element_text(size = 30),
        plot.title = element_text(size = 30),
        legend.position = "right",
        legend.title = element_text(size = 30),
        legend.text = element_text(size = 30),
        axis.title.y = element_text(size = 30,
                                    margin = margin(r = 15)),
        axis.title.x = element_text(size = 30,
                                    margin = margin(t = 15)))


# go to next chunk to assemble with other fits and save the figure
```

```{r}
#| label: suppl-DENV-fit-and-data-LEG-SOL2
#| echo: false

duong_pfu1_sol2 <- conversion_and_small_values_correction(duong_df,
                                                          serotype = 1,
                                                          solution = 2) 

duong_pfu2_sol2 <- conversion_and_small_values_correction(duong_df,
                                                          serotype = 2,
                                                          solution = 2) 

duong_pfu4_sol2 <- conversion_and_small_values_correction(duong_df,
                                                          serotype = 4,
                                                          solution = 2) 

best1_duong <- readRDS(paste0(save_path,"betabinom_Log_DENV1_Duong_LEG.rds"))
best2_duong <- readRDS(paste0(save_path,"betabinom_Log_DENV2_Duong_LEG.rds"))
best4_duong <- readRDS(paste0(save_path,"betabinom_Hill_DENV4_Duong_LEG.rds"))

best2_long_head <- readRDS(paste0(save_path,"betabinom_Log_DENV2_Long_HEADS.rds"))

best_zikv_sq_leg <- readRDS(paste0(save_path,"betabinom_Log_sylv_ZIKV_squirrel_LEG.rds"))
best_zikv_cy_leg <- readRDS(paste0(save_path,"betabinom_Log_sylv_ZIKV_cyno_LEG.rds"))
best_zikv_all_leg <- readRDS(paste0(save_path,"betabinom_Log_sylv_ZIKV_all_LEG.rds"))

predframe <- seq(0,10,length.out = 60)

fit_zikv_cy_leg <- LogFunction(log_V = predframe,
                 log_beta0 = as.numeric(best_zikv_cy_leg@coef[1]),
                 beta1 = as.numeric(best_zikv_cy_leg@coef[2]))
fit_zikv_sq_leg <- LogFunction(log_V = predframe,
                 log_beta0 = as.numeric(best_zikv_sq_leg@coef[1]),
                 beta1 = as.numeric(best_zikv_sq_leg@coef[2]))
fit_zikv_all_leg <- LogFunction(log_V = predframe,
                 log_beta0 = as.numeric(best_zikv_all_leg@coef[1]),
                 beta1 = as.numeric(best_zikv_all_leg@coef[2]))

fit1_duong <- LogFunction(log_V = predframe,
                          log_beta0 = as.numeric(best1_duong@coef[1]),
                          beta1 = as.numeric(best1_duong@coef[2]))

fit2_duong <- LogFunction(log_V = predframe,
                          log_beta0 = as.numeric(best2_duong@coef[1]),
                          beta1 = as.numeric(best2_duong@coef[2]))

fit4_duong <- Hill(log_V = predframe,
                       gamma0 = exp(best4_duong@coef[1]),
                       gamma1 = best4_duong@coef[2])

fit2_long_head <- LogFunction(log_V = predframe,
                          log_beta0 = as.numeric(best2_long_head@coef[1]),
                          beta1 = as.numeric(best2_long_head@coef[2]))

pred_l <- data.frame(dose = rep(predframe,5),
                   resp = c(fit_zikv_all_leg,
                            fit1_duong,
                            fit2_duong,
                            fit4_duong,
                            fit2_long_head),
                   type_exact = rep(c("zikv", "duong1", "duong2", "duong4","long2"),
                                    each = length(predframe)))

# write_xlsx(duong_pfu1_sol2,"../data/Source_Data_FigS6B.xlsx")
# write_xlsx(duong_pfu2_sol2,"../data/Source_Data_FigS6D.xlsx")
# write_xlsx(duong_pfu4_sol2,"../data/Source_Data_FigS6I.xlsx")
# write_xlsx(long_head_df,"../data/Source_Data_FigS6F.xlsx")

# to write superscript a or b
# "Dengue virus 2\u1D43" 
# "Dengue virus 2\u1D47"
my_colors <- c("Dengue virus 1" = "#2A2A2A",
               "Dengue virus 2a" = "#555555",
               "Dengue virus 2b" = "#7F7F7F",
               "Dengue virus 3" = "#AAAAAA",
               "Dengue virus 4" = "#D4D4D4")


p1d <- ggplot() + geom_line(data = pred_l[pred_l$type_exact == "duong1",],
                            aes(x = dose, y = resp, color = "Dengue virus 1"),
                            linewidth = 1.3, alpha = 0.9) +
  geom_point(data = duong_pfu1_sol2,
             aes(x = log_V, y = k/N, size = N, color = "Dengue virus 1"),
             alpha = 0.7) +
  theme_classic() +
  labs(y = "Prob mosquito leg infection",
       x = "",
       size = "Sample size") +
  ggtitle("B - Dengue virus 1") +
    scale_x_continuous(limits = c(0,8.15),
                     expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.03,0.04))) +
  scale_size_continuous(limits=c(1,30),breaks=c(5,15,25),
                        range = c(0,15)) +
  scale_color_manual(values = my_colors, guide = "none") +
  theme(axis.text = element_text(size = 30),
        plot.title = element_text(size = 30),
        legend.position = "right",
        legend.title = element_text(size = 30),
        legend.text = element_text(size = 30),
        axis.title.y = element_text(size = 30,
                                    margin = margin(r = 15)),
        axis.title.x = element_text(size = 30,
                                    margin = margin(t = 15)))

p2d <- ggplot() + geom_line(data = pred_l[pred_l$type_exact == "duong2",],
                            aes(x = dose, y = resp, color = "Dengue virus 2a"),
                            linewidth = 1.3, alpha = 0.9) +
  geom_point(data = duong_pfu2_sol2,
             aes(x = log_V, y = k/N, size = N, color = "Dengue virus 2a"),
             alpha = 0.7) +
  theme_classic() +
  labs(y = "Prob mosquito leg infection",
       x = "",
       size = "Sample size") +
  ggtitle("D - Dengue virus 2") +
    scale_x_continuous(limits = c(0,8.15),
                     expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.03,0.04))) +
  scale_size_continuous(limits=c(1,30),breaks=c(5,15,25),
                        range = c(0,15)) +
  scale_color_manual(values = my_colors, guide = "none") +
  theme(axis.text = element_text(size = 30),
        plot.title = element_text(size = 30),
        legend.position = "right",
        legend.title = element_text(size = 30),
        legend.text = element_text(size = 30),
        axis.title.y = element_text(size = 30,
                                    margin = margin(r = 15)),
        axis.title.x = element_text(size = 30,
                                    margin = margin(t = 15)))


p4d <- ggplot() + geom_line(data = pred_l[pred_l$type_exact == "duong4",],
                            aes(x = dose, y = resp, color = "Dengue virus 4"),
                            linewidth = 1.3, alpha = 0.9) +
  geom_point(data = duong_pfu4_sol2,
             aes(x = log_V, y = k/N, size = N, color = "Dengue virus 4"),
             alpha = 0.7) +
  theme_classic() +
  labs(y = "Prob mosquito leg infection",
       x = bquote("Virus titer ("*log[10]~"PFU/ml)"),
       size = "Sample size") +
  ggtitle("I - Dengue virus 4") +
  scale_x_continuous(limits = c(0,8.15),
                   expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.03,0.04))) +
  scale_size_continuous(limits=c(1,30),breaks=c(5,15,25),
                        range = c(0,15)) +
  scale_color_manual(values = my_colors, guide = "none") +
  theme(axis.text = element_text(size = 30),
        plot.title = element_text(size = 30),
        legend.position = "right",
        legend.title = element_text(size = 30),
        legend.text = element_text(size = 30),
        axis.title.y = element_text(size = 30,
                                    margin = margin(r = 15)),
        axis.title.x = element_text(size = 30,
                                    margin = margin(t = 15)))

p2ll <- ggplot() + geom_line(data = pred_l[pred_l$type_exact == "long2",],
                            aes(x = dose, y = resp, color = "Dengue virus 2b"),
                            linewidth = 1.3, alpha = 0.9) +
  geom_point(data = long_head_df,
             aes(x = log_V, y = k/N, size = N, color = "Dengue virus 2b"),
             alpha = 0.7) +
  theme_classic() +
  labs(y = "Prob mosquito head infection",
       x = "",
       size = "Sample size") +
  ggtitle("F - Dengue virus 2") +
  scale_x_continuous(limits = c(0,8.15),
                     expand = expansion(add = c(0.1,0.1))) +
  scale_y_continuous(limits = c(0,1.05),
                     expand = expansion(add = c(0.03,0.04))) +
  scale_size_continuous(limits=c(1,50),breaks=c(5,15,25,35,45),
                        range = c(0,25)) +
  scale_color_manual(values = my_colors, guide = "none") +
  theme(axis.text = element_text(size = 30),
        plot.title = element_text(size = 30),
        legend.position = "right",
        legend.title = element_text(size = 30),
        legend.text = element_text(size = 30),
        axis.title.y = element_text(size = 30,
                                    margin = margin(r = 15)),
        axis.title.x = element_text(size = 30,
                                    margin = margin(t = 15)))

# Assembly

p <- (p1n | p1d) / (p2n + p2d) / (p2lb | p2ll) / (p3n + plot_spacer()) / (p4n + p4d)

png(filename = "../output/figures/suppl/Figure_S6.png", width = 2100, height = 2970)
plot(p) 
dev.off()


```

```{r}
#| label: differences-squirrel-cyno-fits
#| echo: false

# BODY -----

best_zikv_sq_body <- readRDS(paste0(save_path,"betabinom_Log_sylv_ZIKV_squirrel_BODY.rds"))
best_zikv_cy_body <- readRDS(paste0(save_path,"binom_Ferg_sylv_ZIKV_cyno_BODY.rds"))
best_zikv_all_body <- readRDS(paste0(save_path,"betabinom_Log_sylv_ZIKV_all_BODY.rds"))


lrt(LL0 = best_zikv_all_body@details$value, 
    LL1 = sum(best_zikv_sq_body@details$value,best_zikv_cy_body@details$value),
    df0 = 3, df1 = 5) 
# Body fits are significantly different
# $L01
# [1] 13.81493
# 
# $df
# [1] 2
# 
# $`p-value`
# [1] 0.001000291

# LEG ----
best_zikv_sq_leg <- readRDS(paste0(save_path,"betabinom_Log_sylv_ZIKV_squirrel_LEG.rds"))
best_zikv_cy_leg <- readRDS(paste0(save_path,"betabinom_Log_sylv_ZIKV_cyno_LEG.rds"))
best_zikv_all_leg <- readRDS(paste0(save_path,"betabinom_Log_sylv_ZIKV_all_LEG.rds"))

lrt(LL0 = best_zikv_all_leg@details$value, 
    LL1 = sum(best_zikv_sq_leg@details$value,best_zikv_cy_leg@details$value),
    df0 = 3, df1 = 6) 
# leg fits are not significantly different
# $L01
# [1] 7.692258
# 
# $df
# [1] 3
# 
# $`p-value`
# [1] 0.05281894

```

```{r}
#| label: fit-data-CI-dose50-LEG
#| echo: false

# First the fit of squirrels and cynos, with data ----

best_zikv_sq_leg <- readRDS(paste0(save_path,"betabinom_Log_sylv_ZIKV_squirrel_LEG.rds"))
best_zikv_cy_leg <- readRDS(paste0(save_path,"betabinom_Log_sylv_ZIKV_cyno_LEG.rds"))

samples = 5e3
LogV_vector = seq(0,10, length.out = 500) # to make sure we have a proba close enough to 50% in each curve

# The function applies truncated normal sampling for parameters which should not cross certain boundaries
# to keep the output between 0 and 1
# if such cases still occur, we apply a brut-force artificial resampling, to keep only trajectories between 0 and 1

# some inconsistencies with the published version can exist, because of random sampling
Z_sq <- compute_uncertainty_dose_resp(best_zikv_sq_leg, samples, LogV_vector, LogFunction, "Log", type = "betabinom")
Z_sq_50 <- Z_sq$dose50_estim
Z_sq_CI <- c(Z_sq$envelope$dose[which.min(abs(Z_sq$envelope$max_95-0.5))],
          Z_sq$envelope$dose[which.min(abs(Z_sq$envelope$min_95-0.5))])

Z_cy <- compute_uncertainty_dose_resp(best_zikv_cy_leg, samples, LogV_vector, LogFunction, "Log", type = "betabinom")
Z_cy_50 <- Z_cy$dose50_estim
Z_cy_CI <- c(Z_cy$envelope$dose[which.min(abs(Z_cy$envelope$max_95-0.5))],
          Z_cy$envelope$dose[which.min(abs(Z_cy$envelope$min_95-0.5))])

# including data, confidence interval, and dose50
species_colors <- c("Squirrel" = "#0000BB",
                    "Cyno" = "#00DDDD")


labelZ_sq <- paste0((sprintf('%.2f',Z_sq_50)),
                    " [",
                    (sprintf('%.2f',Z_sq_CI[1])),";",(sprintf('%.2f',Z_sq_CI[2])),
                    "]")

labelZ_cy <- paste0((sprintf('%.2f',Z_cy_50)),
                    " [",
                    (sprintf('%.2f',Z_cy_CI[1])),";",(sprintf('%.2f',Z_cy_CI[2])),
                    "]")

legend_title_A <- bquote(bold("ZIKV " ~ID[50]~"[CI]"))

breaks <- c(5, 10, 15)
n_breaks <- length(breaks)
labels <- c(breaks, rep("", n_breaks))
shapes <- c(rep(16, n_breaks), rep(6, n_breaks))
colors <- c(rep("#0000BB", n_breaks),rep("#00DDDD", n_breaks))
breaks2 <- rep(breaks, 2)

# zikv_sq_leg$species <- "Squirrel"
# zikv_cy_leg$species <- "Cyno"
# zikv_leg <- rbind(zikv_sq_leg,zikv_cy_leg)
# write_xlsx(zikv_leg,"../data/Source_Data_Fig6A.xlsx")

pz <- ggplot() + 
  geom_vline(aes(xintercept = Z_sq_50, color = "Squirrel")) +
  geom_vline(aes(xintercept = Z_cy_50, color = "Cyno")) +
  geom_line(data = Z_sq$envelope, aes(x = dose, y = fit, color = "Squirrel"),
            linewidth = 1.3, alpha = 0.9) +
  geom_line(data = Z_cy$envelope, aes(x = dose, y = fit, color = "Cyno"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = Z_sq$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Squirrel"), alpha = 0.2) +
  geom_ribbon(data = Z_cy$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Cyno"), alpha = 0.2) +
  geom_point(aes(x = Z_sq_50, y = 0.5),
             size = 4, alpha = 0.8) +
  geom_point(aes(x = Z_cy_50, y = 0.5),
             size = 4, alpha = 0.8) +
  geom_point(data = zikv_sq_leg, aes(x = log_V, y = k/N, size = N,
                                 shape = "Squirrel"), 
             color = "#0000BB", alpha = 0.7) +
  geom_point(data = zikv_cy_leg, aes(x = log_V, y = k/N, size = N,
                                 shape = "Cyno"),
             color = "#00DDDD", stroke = 1.5) +
  ggtitle("A") +
  theme_classic() +
  scale_x_continuous(limits = c(0,8.15),
                     expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.02,0.03))) +
  scale_color_manual(values = species_colors[c(1,2)],
                     name = legend_title_A,
                     labels = c(labelZ_cy,labelZ_sq)) +
  scale_fill_manual(values = species_colors[c(1,2)],
                     name = legend_title_A,
                     labels = c(labelZ_cy,labelZ_sq)) +
  scale_size_continuous(limits=c(1,15), range = c(0,10),
                        breaks = breaks2, labels = labels,
                         guide = guide_legend(order = 2, ncol = 2, byrow = FALSE,
                                              override.aes = list(shape = shapes,
                                                                  color = colors),
                                              direction = "vertical", label.hjust = 1)) +
  scale_shape_manual(name = bquote(bold("Monkey species")),
                   values = c("Cyno" = 6,
                              "Squirrel" = 16),
                   labels = c("Squirrel monkeys",
                              "Cynomolgus macaques"),
                   breaks = c("Squirrel",
                              "Cyno")) +
  guides(color = guide_legend(nrow = 2, byrow = TRUE),
       fill = guide_legend(nrow = 2, byrow = TRUE),
       shape = guide_legend(order = 1,
                            override.aes = list(size = 4,
                                                color = c("#0000BB","#00DDDD")),
                            byrow = TRUE)) +
  labs(x = bquote("Virus titer ("*log[10]~"PFU/ml)"), #Host viral load
       y = "Prob mosquito leg infection",
       size = bquote(bold("N mosq. titered"))) +
  theme_classic() +
  theme(legend.key.width = unit(1,'cm'),
        axis.text = element_text(size = 32),
        axis.title.x = element_text(size = 34),
        axis.title.y = element_text(size = 34,
                                    margin = margin(r = 15)),
        legend.text = element_text(size = 32),
        legend.title = element_text(size = 33),
        legend.position = "right",
        plot.title = element_text(size = 22),
        plot.margin = margin(t = 10, r = 15, b = 0, l = 5),
        legend.background = element_rect(color = NA, fill = NA),
        legend.spacing.y = unit(0.5, 'cm')) # works for legends with byrow = TRUE

# Modified version for a conference
# img_cyno<- magick::image_read("~/Documents/POSTDOC/Presentations/Images/cyno_outline.png")
# img_squirrel<- magick::image_read("~/Documents/POSTDOC/Presentations/Images/squirrel_outline.png")
# img_mosq<- magick::image_read("~/Documents/POSTDOC/Presentations/Images/mosquito_outline.png")
# 
# p_draw <- ggdraw() +
#   draw_plot(pz) +
#   draw_image(image = img_squirrel,
#               x = 0.15, y = 0.65, scale = 0.14,
#               valign = 0, halign = 0) +
#   draw_image(image = img_cyno,
#               x = 0.52, y = 0.45, scale = 0.14,
#               valign = 0, halign = 0) +
#   draw_image(image = img_mosq,
#              x = 0.22, y = 0.735, scale = 0.08,
#              valign = 0, halign = 0) +
#   draw_image(image = img_mosq,
#              x = 0.58, y = 0.575, scale = 0.08,
#              valign = 0, halign = 0)
# 
# png(filename = "~/Documents/POSTDOC/trade_offs_NMSU/output/TropMed23/Epidemics_dose_resp_leg.png", width = 1600, height = 750)
# plot(p_draw)
# dev.off()

# Then the comparison with DENV in humans, just CI and dose 50 ----

duong_pfu1_sol2 <- conversion_and_small_values_correction(duong_df,
                                                          serotype = 1,
                                                          solution = 2) 
duong_pfu4_sol2 <- conversion_and_small_values_correction(duong_df,
                                                          serotype = 4,
                                                          solution = 2) 


best1_duong <- readRDS(paste0(save_path,"betabinom_Log_DENV1_Duong_LEG.rds"))
best4_duong <- readRDS(paste0(save_path,"betabinom_Hill_DENV4_Duong_LEG.rds"))
best_zikv_all_leg <- readRDS(paste0(save_path,"betabinom_Log_sylv_ZIKV_all_LEG.rds"))
best2_duong <- readRDS(file = "../output/result_files/transmission_to_mosquitoes/zika_sylvatic_vs_dengue_literature/betabinom_Log_DENV2_Duong_LEG.rds")

best2_long_head <- readRDS(paste0(save_path,"betabinom_Log_DENV2_Long_HEADS.rds"))

Z <- compute_uncertainty_dose_resp(best_zikv_all_leg, samples, LogV_vector, LogFunction, "Log",
                                   type = "betabinom")
Z_50 <- Z$dose50_estim
Z_CI <- c(Z$envelope$dose[which.min(abs(Z$envelope$max_95-0.5))],
          Z$envelope$dose[which.min(abs(Z$envelope$min_95-0.5))])

D1 <- compute_uncertainty_dose_resp(best1_duong, samples, LogV_vector, LogFunction, "Log",
                                    type = "betabinom")
D1_50 <- D1$dose50_estim
D1_CI <- c(D1$envelope$dose[which.min(abs(D1$envelope$max_95-0.5))],
           D1$envelope$dose[which.min(abs(D1$envelope$min_95-0.5))])

D2 <- compute_uncertainty_dose_resp(best2_duong, samples, LogV_vector, LogFunction, "Log")
D2_50 <- D2$dose50_estim
D2_CI <- c(D2$envelope$dose[which.min(abs(D2$envelope$max_95-0.5))],
           D2$envelope$dose[which.min(abs(D2$envelope$min_95-0.5))])

D4 <- compute_uncertainty_dose_resp(best4_duong, samples, LogV_vector, Hill, "Hill",
                                    type = "betabinom")
D4_50 <- D4$dose50_estim
D4_CI <- c(D4$envelope$dose[which.min(abs(D4$envelope$max_95-0.5))],
           D4$envelope$dose[which.min(abs(D4$envelope$min_95-0.5))])

# L2 <- compute_uncertainty_dose_resp(best2_long_head, samples, LogV_vector, LogFunction, "Log",
#                                     type = "betabinom")
# L2_50 <- L2$dose50_estim
# L2_CI <- c(L2$envelope$dose[which.min(abs(L2$envelope$max_95-0.5))],
#            L2$envelope$dose[which.min(abs(L2$envelope$min_95-0.5))])
# the confidence interval was not satisfying for this one, so I switched to glmmTMB instead
test <- glmmTMB(k/N ~ log_V, data = long_head_df, weights = N, family = "betabinomial")
newDat <- data.frame(log_V = LogV_vector)
newDat$N <- 15
pred <- predict(test, se.fit = T, newdata = newDat)
newDat$pred <- plogis(pred$fit)
newDat$lwr <- plogis(pred$fit - 1.96*pred$se.fit)
newDat$upr <- plogis(pred$fit + 1.96*pred$se.fit)
L2_50 <- newDat$log_V[which.min(abs(newDat$pred-0.5))]
L2_CI <- c(newDat$log_V[which.min(abs(newDat$upr-0.5))],
           newDat$log_V[which.min(abs(newDat$lwr-0.5))])

# sprintf is used to show the 0 decimals even when rounded to integer
labelD1 <- paste0("Dengue virus 1\n",(sprintf('%.2f',D1_50)),
                                      " [",
                                      (sprintf('%.2f',D1_CI[1])),";",(sprintf('%.2f',D1_CI[2])),
                                      "]")

labelD4 <- paste0("Dengue virus 4\n",(sprintf('%.2f',D4_50)),
                                      " [",
                                      (sprintf('%.2f',D4_CI[1])),";",(sprintf('%.2f',D4_CI[2])),
                                      "]")

labelD2 <- paste0("Dengue virus 2\u1D43\n",(sprintf('%.2f',D2_50))) 
labelL2 <- "Dengue virus 2\u1D47\n"

legend_title <- bquote("Virus " ~ID[50]~"[CI]") 

labelZ <- paste0("Zika virus\n",(sprintf('%.2f',Z_50)),
                                      " [",
                                      (sprintf('%.2f',Z_CI[1])),";",(sprintf('%.2f',Z_CI[2])),
                                      "]")

# shadesOfGrey <- colorRampPalette(c("grey0", "grey100"))
# shadesOfGrey(7)
# exclude the first and last

my_colors <- c("Dengue virus 1" = "#2A2A2A",
               "Dengue virus 2a" = "#555555",
               "Dengue virus 2b" = "#7F7F7F",
               "Dengue virus 3" = "#AAAAAA",
               "Dengue virus 4" = "#D4D4D4",
               "Zika virus" = "#2b8cbe")

p1 <- ggplot() + 
  geom_vline(aes(color = "Zika virus", xintercept = Z_50)) +
  geom_vline(aes(color = "Dengue virus 1", xintercept = D1_50)) +
  geom_line(data = D1$envelope, aes(x = dose, y = fit, color = "Dengue virus 1"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = D1$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Dengue virus 1"), alpha = 0.2) +
  geom_line(data = Z$envelope, aes(x = dose, y = fit, color = "Zika virus"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = Z$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Zika virus"), alpha = 0.2) +
  geom_point(aes(x = D1_50, y = 0.5,
                 color = "Dengue virus 1"),
             size = 4, alpha = 0.8) +
  geom_point(aes(x = Z_50, y = 0.5,
               color = "Zika virus"),
             size = 4, alpha = 0.8) +
  theme_classic() +
  ggtitle("B") +
  scale_x_continuous(limits = c(0,8.15),
                     expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.01,0.03))) +
  scale_color_manual(values = my_colors[c(1,6)],
                     name = legend_title,
                     labels = c(labelD1,labelZ)) +
  scale_fill_manual(values = my_colors[c(1,6)],
                     name = legend_title,
                     labels = c(labelD1,labelZ)) +
  labs(x = "", #bquote("Virus titer ("*log[10]~"PFU/ml)"),
       y = "Prob mosquito leg infection") +
  guides(color = guide_legend(nrow = 3, byrow = TRUE),
         fill = guide_legend(nrow = 3, byrow = TRUE)) +
  theme_classic() +
  theme(axis.text = element_text(size = 22),
        axis.title.x = element_text(size = 24),
        axis.title.y = element_text(size = 24,
                                    margin = margin(r = 15)),
        legend.text = element_text(size = 20),
        legend.title = element_text(size = 20),
        legend.position = c(0.185,0.765),
        plot.title = element_text(size = 21),
        plot.margin = margin(t = 0, r = 15, b = 0, l = 0),
        legend.background = element_rect(color = NA, fill = NA),
        legend.spacing.y = unit(0.5, 'cm'))

p4 <- ggplot() + 
  geom_vline(aes(color = "Zika virus", xintercept = Z_50)) +
  geom_vline(aes(color = "Dengue virus 4", xintercept = D4_50)) +
  geom_line(data = D4$envelope, aes(x = dose, y = fit, color = "Dengue virus 4"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = D4$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Dengue virus 4"), alpha = 0.2) +
  geom_line(data = Z$envelope, aes(x = dose, y = fit, color = "Zika virus"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = Z$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                     fill = "Zika virus"), alpha = 0.2) +
  geom_point(aes(x = D4_50, y = 0.5,
                 color = "Dengue virus 4"),
             size = 4, alpha = 0.8) +
  geom_point(aes(x = Z_50, y = 0.5,
               color = "Zika virus"),
             size = 4, alpha = 0.8) +
  theme_classic() +
  ggtitle("E") +
  scale_x_continuous(limits = c(0,8.15),
                     expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.01,0.03))) +
  scale_color_manual(values = my_colors[c(5,6)],
                     name = "",
                     labels = c(labelD4,labelZ)) +
  scale_fill_manual(values = my_colors[c(5,6)],
                     name = "",
                     labels = c(labelD4,labelZ)) +
  labs(x = bquote("Virus titer ("*log[10]~"PFU/ml)"),
       y = "") +
  guides(color = guide_legend(nrow = 3, byrow = TRUE),
         fill = guide_legend(nrow = 3, byrow = TRUE)) +
  theme_classic() +
  theme(axis.text = element_text(size = 22),
        axis.title = element_text(size = 24),
        legend.text = element_text(size = 20),
        legend.title = element_text(size = 20),
        legend.position = c(0.18,0.82),
        plot.title = element_text(size = 21),
        plot.margin = margin(t = 0, r = 0, b = 0, l = 0),
        legend.background = element_rect(color = NA, fill = NA), # to have no white around legend
        legend.spacing.y = unit(0.5, 'cm')) # only works in legends with byrow= TRUE


p2l <- ggplot() + 
  geom_vline(aes(color = "Zika virus", xintercept = Z_50)) +
  geom_vline(aes(color = "Dengue virus 2b", xintercept = L2_50)) +
  geom_line(data = newDat, aes(x = log_V, y = pred, color = "Dengue virus 2b"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = newDat, aes(x = log_V, ymin = lwr, ymax = upr,
                                      fill = "Dengue virus 2b"), alpha = 0.2) +
  geom_line(data = Z$envelope, aes(x = dose, y = fit, color = "Zika virus"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = Z$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                     fill = "Zika virus"), alpha = 0.2) +
  geom_point(aes(x = L2_50, y = 0.5,
                 color = "Dengue virus 2b"),
             size = 4, alpha = 0.8) +
  geom_point(aes(x = Z_50, y = 0.5,
               color = "Zika virus"),
             size = 4, alpha = 0.8) +
  theme_classic() +
  ggtitle("D") +
  scale_x_continuous(limits = c(0,8.15),
                     expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.01,0.03))) +
  scale_color_manual(values = my_colors[c(3,6)],
                     name = "",
                     labels = c(labelL2,labelZ)) +
  scale_fill_manual(values = my_colors[c(3,6)],
                     name = "",
                     labels = c(labelL2,labelZ)) +
  labs(x = bquote("Virus titer ("*log[10]~"PFU/ml)"),
       y = "Prob mosquito leg infection") +
  guides(color = guide_legend(nrow = 3, byrow = TRUE),
         fill = guide_legend(nrow = 3, byrow = TRUE)) +
  theme_classic() +
  theme(axis.text = element_text(size = 22),
        axis.title.x = element_text(size = 24),
        axis.title.y = element_text(size = 24,
                                    margin = margin(r = 15)),
        legend.text = element_text(size = 20),
        legend.title = element_text(size = 20),
        legend.position = c(0.18,0.82),
        plot.title = element_text(size = 21),
        plot.margin = margin(t = 0, r = 0, b = 0, l = 0),
        legend.background = element_rect(color = NA, fill = NA), # to have no white around legend
        legend.spacing.y = unit(0.5, 'cm')) # only works in legends with byrow= TRUE

p2d <- ggplot() + 
  geom_vline(aes(color = "Zika virus", xintercept = Z_50)) +
  geom_vline(aes(color = "Dengue virus 2a", xintercept = D2_50)) +
  geom_line(data = D2$envelope, aes(x = dose, y = fit, color = "Dengue virus 2a"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = D2$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                     fill = "Dengue virus 2a"), alpha = 0.2) +
  geom_line(data = Z$envelope, aes(x = dose, y = fit, color = "Zika virus"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = Z$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                     fill = "Zika virus"), alpha = 0.2) +
  geom_point(aes(x = D2_50, y = 0.5,
                 color = "Dengue virus 2a"),
             size = 4, alpha = 0.8) +
  geom_point(aes(x = Z_50, y = 0.5,
               color = "Zika virus"),
             size = 4, alpha = 0.8) +
  theme_classic() +
  ggtitle("C") +
  scale_x_continuous(limits = c(0,8.15),
                     expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.01,0.03))) +
  scale_color_manual(values = my_colors[c(2,6)],
                     name = "",
                     labels = c(labelD2,labelZ)) +
  scale_fill_manual(values = my_colors[c(2,6)],
                     name = "",
                     labels = c(labelD2,labelZ)) +
  labs(x = "", #bquote("Virus titer ("*log[10]~"PFU/ml)"),
       y = "") +
  guides(color = guide_legend(nrow = 3, byrow = TRUE),
         fill = guide_legend(nrow = 3, byrow = TRUE)) +
  theme_classic() +
  theme(axis.text = element_text(size = 22),
        axis.title = element_text(size = 24),
        legend.text = element_text(size = 20),
        legend.title = element_text(size = 20),
        legend.position = c(0.18,0.82),
        plot.title = element_text(size = 21),
        plot.margin = margin(t = 0, r = 0, b = 0, l = 0),
        legend.background = element_rect(color = NA, fill = NA), # to have no white around legend
        legend.spacing.y = unit(0.5, 'cm'))

pd12 <- (p1 | p2d)
pd24 <- (p2l | p4)
p <- pz / wrap_elements(full = pd12) / wrap_elements(full = pd24)

png(filename = "../output/figures/main/Figure_6.png",
    width = 1300, height = 1350)
print(p)
dev.off()

cairo_pdf(file = "../output/figures/main/Figure_6.pdf",
    width = 17.3, height = 18)
print(p)
dev.off()

```

```{r}
#| label: fit-data-CI-dose50-BODY
#| echo: false

# Uncertainty around fits and dose 50 -----
best1_nguyen <- readRDS(paste0(save_path,"betabinom_Log_DENV1_Nguyen_BODY.rds"))
best2_nguyen <- readRDS(paste0(save_path,"betabinom_Log_DENV2_Nguyen_BODY.rds"))
best3_nguyen <- readRDS(paste0(save_path,"betabinom_Log_DENV3_Nguyen_BODY.rds"))
best4_nguyen <- readRDS(paste0(save_path,"betabinom_Log_DENV4_Nguyen_BODY.rds"))

best2_long_body <- readRDS(paste0(save_path,"betabinom_Log_DENV2_Long_BODY.rds"))

best_zikv_sq_body <- readRDS(paste0(save_path,"betabinom_Log_sylv_ZIKV_squirrel_BODY.rds"))
best_zikv_cy_body <- readRDS(paste0(save_path,"binom_Ferg_sylv_ZIKV_cyno_BODY.rds"))
best_zikv_all_body <- readRDS(paste0(save_path,"betabinom_Log_sylv_ZIKV_all_BODY.rds"))

samples = 5e3
LogV_vector = seq(0,10, length.out = 500) # to make sure we have a proba close enough to 50% in each curve

# The function applies truncated normal sampling for parameters which should not cross certain boundaries
# to keep the output between 0 and 1
# if such cases still occur, we apply a brut-force artificial resampling, to keep only trajectories between 0 and 1

N1 <- compute_uncertainty_dose_resp(best1_nguyen, samples, LogV_vector, LogFunction, "Log")
N1_50 <- N1$dose50_estim
# N1_CI <- quantile(N1$dose50_CI, probs = c(0.025, 0.975))
# previously CI was computed this way
# to be consistent with what is plotted (only minor inconsistencies)
# confidence intervals directly computed based on the envelope
# find the dose for which min/max 95 are close to 0.5
# reversed : min is found with upper envelope (max95) and vice versa
# still, there can be small inconsistencies with the published version because of the random sampling
N1_CI <- c(N1$envelope$dose[which.min(abs(N1$envelope$max_95-0.5))],
           N1$envelope$dose[which.min(abs(N1$envelope$min_95-0.5))])

N2 <- compute_uncertainty_dose_resp(best2_nguyen, samples, LogV_vector, LogFunction, "Log")
N2_50 <- N2$dose50_estim
N2_CI <- c(N2$envelope$dose[which.min(abs(N2$envelope$max_95-0.5))],
           N2$envelope$dose[which.min(abs(N2$envelope$min_95-0.5))])

N3 <- compute_uncertainty_dose_resp(best3_nguyen, samples, LogV_vector, LogFunction, "Log")
N3_50 <-  N3$dose50_estim
N3_CI <- c(N3$envelope$dose[which.min(abs(N3$envelope$max_95-0.5))],
           N3$envelope$dose[which.min(abs(N3$envelope$min_95-0.5))])

N4 <- compute_uncertainty_dose_resp(best4_nguyen, samples, LogV_vector, LogFunction, "Log")
N4_50 <- N4$dose50_estim
N4_CI <- c(N4$envelope$dose[which.min(abs(N4$envelope$max_95-0.5))],
           N4$envelope$dose[which.min(abs(N4$envelope$min_95-0.5))])

L2 <- compute_uncertainty_dose_resp(best2_long_body, samples, LogV_vector, LogFunction, "Log")
L2_50 <- L2$dose50_estim
L2_CI <- c(L2$envelope$dose[which.min(abs(L2$envelope$max_95-0.5))],
           L2$envelope$dose[which.min(abs(L2$envelope$min_95-0.5))])

Z_sq <- compute_uncertainty_dose_resp(best_zikv_sq_body, samples, LogV_vector, LogFunction, "Log", type = "betabinom")
Z_sq_50 <- Z_sq$dose50_estim
Z_sq_CI <- c(Z_sq$envelope$dose[which.min(abs(Z_sq$envelope$max_95-0.5))],
          Z_sq$envelope$dose[which.min(abs(Z_sq$envelope$min_95-0.5))])

Z_cy <- compute_uncertainty_dose_resp(best_zikv_cy_body, samples, LogV_vector, Ferguson, "Ferguson", type = "binom")
Z_cy_50 <- Z_cy$dose50_estim
Z_cy_CI <- c(Z_cy$envelope$dose[which.min(abs(Z_cy$envelope$max_95-0.5))],
          Z_cy$envelope$dose[which.min(abs(Z_cy$envelope$min_95-0.5))])

Z <- compute_uncertainty_dose_resp(best_zikv_all_body, samples, LogV_vector, LogFunction, "Log", type = "betabinom")
Z_50 <- Z$dose50_estim
Z_CI <- c(Z$envelope$dose[which.min(abs(Z$envelope$max_95-0.5))],
          Z$envelope$dose[which.min(abs(Z$envelope$min_95-0.5))])

species_colors <- c("Squirrel" = "#0000BB",
                    "Cyno" = "#00DDDD")


labelZ_sq <- paste0((sprintf('%.2f',Z_sq_50)),
                    " [",
                    (sprintf('%.2f',Z_sq_CI[1])),";",(sprintf('%.2f',Z_sq_CI[2])),
                    "]")

labelZ_cy <- paste0((sprintf('%.2f',Z_cy_50)),
                    " [",
                    (sprintf('%.2f',Z_cy_CI[1])),";",(sprintf('%.2f',Z_cy_CI[2])),
                    "]")

legend_title <- bquote(bold("ZIKV " ~ID[50]~"[CI]"))

breaks <- c(5, 10, 15)
n_breaks <- length(breaks)
labels <- c(breaks, rep("", n_breaks))
shapes <- c(rep(16, n_breaks), rep(6, n_breaks))
colors <- c(rep("#0000BB", n_breaks),rep("#00DDDD", n_breaks))
breaks2 <- rep(breaks, 2)

zikv_sq_body$species <- "Squirrel"
zikv_cy_body$species <- "Cyno"
zikv_body <- rbind(zikv_sq_body,zikv_cy_body)
write_xlsx(zikv_body,"../data/Source_Data_FigS4A.xlsx")

pz <- ggplot() + 
  geom_vline(aes(xintercept = Z_sq_50, color = "Squirrel")) +
  geom_vline(aes(xintercept = Z_cy_50, color = "Cyno")) +
  geom_line(data = Z_sq$envelope, aes(x = dose, y = fit, color = "Squirrel"),
            linewidth = 1.3, alpha = 0.9) +
  geom_line(data = Z_cy$envelope, aes(x = dose, y = fit, color = "Cyno"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = Z_sq$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Squirrel"), alpha = 0.2) +
  geom_ribbon(data = Z_cy$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Cyno"), alpha = 0.2) +
  geom_point(data = zikv_sq_body, aes(x = log_V, y = k/N, size = N,
                                 shape = "Squirrel"), 
             color = "#0000BB", alpha = 0.7) +
  geom_point(data = zikv_cy_body, aes(x = log_V, y = k/N, size = N,
                                 shape = "Cyno"),
             color = "#00DDDD", stroke = 1.5) +
  geom_point(aes(x = Z_sq_50, y = 0.5),
             size = 4, alpha = 0.8) +
  geom_point(aes(x = Z_cy_50, y = 0.5),
             size = 4, alpha = 0.8) +
  ggtitle("A") +
  theme_classic() +
  scale_x_continuous(limits = c(0,8.15),
                     expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.02,0.03))) +
  scale_color_manual(values = species_colors[c(1,2)],
                     name = legend_title,
                     labels = c(labelZ_cy,labelZ_sq)) +
  scale_fill_manual(values = species_colors[c(1,2)],
                     name = legend_title,
                     labels = c(labelZ_cy,labelZ_sq)) +
  scale_size_continuous(limits=c(1,15), range = c(0,10),
                        breaks = breaks2, labels = labels,
                         guide = guide_legend(order = 2, ncol = 2, byrow = FALSE,
                                              override.aes = list(shape = shapes,
                                                                  color = colors),
                                              direction = "vertical", label.hjust = 1)) +
  scale_shape_manual(name = bquote(bold("Monkey species")),
                   values = c("Cyno" = 6,
                              "Squirrel" = 16),
                   labels = c("Squirrel monkeys",
                              "Cynomolgus macaques"),
                   breaks = c("Squirrel",
                              "Cyno")) +
  guides(color = guide_legend(nrow = 2, byrow = TRUE),
       fill = guide_legend(nrow = 2, byrow = TRUE),
       shape = guide_legend(order = 1,
                            override.aes = list(size = 4,
                                                color = c("#0000BB","#00DDDD")),
                            byrow = TRUE)) +
  labs(x = bquote("Virus titer ("*log[10]~"PFU/ml)"),
       y = "Prob mosquito body infection",
       size = bquote(bold("N mosq. titered"))) +
  theme_classic() +
  theme(legend.key.width = unit(1,'cm'),
        axis.text = element_text(size = 32),
        axis.title.x = element_text(size = 34),
        axis.title.y = element_text(size = 34,
                                    margin = margin(r = 15)),
        legend.text = element_text(size = 32),
        legend.title = element_text(size = 33),
        legend.position = "right",
        plot.title = element_text(size = 26),
        plot.margin = margin(t = 1, r = 15, b = 0, l = 5),
        legend.background = element_rect(color = NA, fill = NA),
        legend.spacing.y = unit(0.5, 'cm')) # works for legends with byrow = TRUE

# sprintf is used to show the 0 decimals even when rounded to integer
labelN1 <- paste0("Dengue virus 1\n",(sprintf('%.2f',N1_50)),
                                      " [",
                                      (sprintf('%.2f',N1_CI[1])),";",(sprintf('%.2f',N1_CI[2])),
                                      "]")

labelN2 <- paste0("Dengue virus 2\n",(sprintf('%.2f',N2_50)),
                                      " [",
                                      (sprintf('%.2f',N2_CI[1])),";",(sprintf('%.2f',N2_CI[2])),
                                      "]")

labelN3 <- paste0("Dengue virus 3\n",(sprintf('%.2f',N3_50)),
                                      " [",
                                      (sprintf('%.2f',N3_CI[1])),";",(sprintf('%.2f',N3_CI[2])),
                                      "]")

labelN4 <- paste0("Dengue virus 4\n",(sprintf('%.2f',N4_50)),
                                      " [",
                                      (sprintf('%.2f',N4_CI[1])),";",(sprintf('%.2f',N4_CI[2])),
                                      "]")

labelL2 <- paste0("Dengue virus 2\n",(sprintf('%.2f',L2_50)),
                                      " [",
                                      (sprintf('%.2f',L2_CI[1])),";",(sprintf('%.2f',L2_CI[2])),
                                      "]")

legend_title <- bquote("Virus " ~ID[50]~"[CI]") 

# Merge NHP species ----

my_colors <- c("Dengue virus 1" = "#2A2A2A",
               "Dengue virus 2a" = "#555555",
               "Dengue virus 2b" = "#7F7F7F",
               "Dengue virus 3" = "#AAAAAA",
               "Dengue virus 4" = "#D4D4D4",
               "Zika virus" = "#2b8cbe")

labelZ <- paste0("Zika virus\n",(sprintf('%.2f',Z_50)),
                                      " [",
                                      (sprintf('%.2f',Z_CI[1])),";",(sprintf('%.2f',Z_CI[2])),
                                      "]")
  

p1 <- ggplot() + 
  geom_vline(aes(color = "Zika virus", xintercept = Z_50)) +
  geom_vline(aes(color = "Dengue virus 1", xintercept = N1_50)) +
  geom_line(data = N1$envelope, aes(x = dose, y = fit, color = "Dengue virus 1"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = N1$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Dengue virus 1"), alpha = 0.2) +
  geom_line(data = Z$envelope, aes(x = dose, y = fit, color = "Zika virus"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = Z$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Zika virus"), alpha = 0.2) +
  geom_point(aes(x = N1_50, y = 0.5,
                 color = "Dengue virus 1"),
             size = 4, alpha = 0.8) +
  geom_point(aes(x = Z_50, y = 0.5,
               color = "Zika virus"),
             size = 4, alpha = 0.8) +
  theme_classic() +
  scale_x_continuous(limits = c(0,8.15),
                     expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.01,0.03))) +
  scale_color_manual(values = my_colors[c(1,6)],
                     name = legend_title,
                     labels = c(labelN1,labelZ)) +
  scale_fill_manual(values = my_colors[c(1,6)],
                     name = legend_title,
                     labels = c(labelN1,labelZ)) +
  labs(x = "",
       y = "") +
  guides(color = guide_legend(nrow = 3),
         fill = guide_legend(nrow = 3)) +
  theme_classic() +
  ggtitle("B") +
  theme(axis.text = element_text(size = 22),
        axis.title.x = element_text(size = 27),
        axis.title.y = element_text(size = 27,
                                    margin = margin(r = 15)),
        legend.text = element_text(size = 22),
        legend.title = element_text(size = 22),
        legend.position = c(0.22,0.75),
        plot.title = element_text(size = 23),
        plot.margin = margin(t = 0, r = 15, b = 0, l = 0),
        legend.background = element_rect(color = NA, fill = NA))

p2 <- ggplot() + 
  geom_vline(aes(color = "Zika virus", xintercept = Z_50)) +
  geom_vline(aes(color = "Dengue virus 2a", xintercept = N2_50)) +
  geom_line(data = N2$envelope, aes(x = dose, y = fit, color = "Dengue virus 2a"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = N2$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Dengue virus 2a"), alpha = 0.2) +
  geom_line(data = Z$envelope, aes(x = dose, y = fit, color = "Zika virus"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = Z$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                     fill = "Zika virus"), alpha = 0.2) +
  geom_point(aes(x = N2_50, y = 0.5,
                 color = "Dengue virus 2a"),
             size = 4, alpha = 0.8) +
  geom_point(aes(x = Z_50, y = 0.5,
               color = "Zika virus"),
             size = 4, alpha = 0.8) +
  theme_classic() +
  scale_x_continuous(limits = c(0,8.15),
                     expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.01,0.03))) +
  scale_color_manual(values = my_colors[c(2,6)],
                     name = "",
                     labels = c(labelN2,labelZ)) +
  scale_fill_manual(values = my_colors[c(2,6)],
                     name = "",
                     labels = c(labelN2,labelZ)) +
  labs(x = "",
       y = "Prob mosquito body infection") +
  guides(color = guide_legend(nrow = 3),
         fill = guide_legend(nrow = 3)) +
  theme_classic() +
  ggtitle("C") +
  theme(axis.text = element_text(size = 22),
        axis.title.x = element_text(size = 27),
        axis.title.y = element_text(size = 27,
                                    margin = margin(r = 15)),
        legend.text = element_text(size = 22),
        legend.title = element_text(size = 22),
        legend.position = c(0.75,0.28),
        plot.title = element_text(size = 23),
        plot.margin = margin(t = 0, r = 15, b = 0, l = 0),
        legend.background = element_rect(color = NA, fill = NA))

p3 <- ggplot() + 
  geom_vline(aes(color = "Zika virus", xintercept = Z_50)) +
  geom_vline(aes(color = "Dengue virus 3", xintercept = N3_50)) +
  geom_line(data = N3$envelope, aes(x = dose, y = fit, color = "Dengue virus 3"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = N3$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Dengue virus 3"), alpha = 0.2) +
  geom_line(data = Z$envelope, aes(x = dose, y = fit, color = "Zika virus"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = Z$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                     fill = "Zika virus"), alpha = 0.2) +
  geom_point(aes(x = N3_50, y = 0.5,
                 color = "Dengue virus 3"),
             size = 4, alpha = 0.8) +
  geom_point(aes(x = Z_50, y = 0.5,
               color = "Zika virus"),
             size = 4, alpha = 0.8) +
  theme_classic() +
  ggtitle("E") +
  scale_x_continuous(limits = c(0,8.15),
                     expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.01,0.03))) +
  scale_color_manual(values = my_colors[c(4,6)],
                     name = "",
                     labels = c(labelN3,labelZ)) +
  scale_fill_manual(values = my_colors[c(4,6)],
                     name = "",
                     labels = c(labelN3,labelZ)) +
  labs(x = bquote("Virus titer ("*log[10]~"PFU/ml)"),
       y = "") +
  guides(color = guide_legend(nrow = 3),
         fill = guide_legend(nrow = 3)) +
  theme_classic() +
  theme(axis.text = element_text(size = 22),
        axis.title.x = element_text(size = 27),
        axis.title.y = element_text(size = 27,
                                    margin = margin(r = 15)),
        legend.text = element_text(size = 22),
        legend.title = element_text(size = 22),
        legend.position = c(0.75,0.28),
        plot.title = element_text(size = 23),
        plot.margin = margin(t = 0, r = 15, b = 0, l = 0),
        legend.background = element_rect(color = NA, fill = NA))


p4 <- ggplot() + 
  geom_vline(aes(color = "Zika virus", xintercept = Z_50)) +
  geom_vline(aes(color = "Dengue virus 4", xintercept = N4_50)) +
  geom_line(data = N4$envelope, aes(x = dose, y = fit, color = "Dengue virus 4"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = N4$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Dengue virus 4"), alpha = 0.2) +
  geom_line(data = Z$envelope, aes(x = dose, y = fit, color = "Zika virus"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = Z$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                     fill = "Zika virus"), alpha = 0.2) +
  geom_point(aes(x = N4_50, y = 0.5,
                 color = "Dengue virus 4"),
             size = 4, alpha = 0.8) +
  geom_point(aes(x = Z_50, y = 0.5,
               color = "Zika virus"),
             size = 4, alpha = 0.8) +
  theme_classic() +
  ggtitle("F") +
  scale_x_continuous(limits = c(0,8.15),
                     expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.01,0.03))) +
  scale_color_manual(values = my_colors[c(5,6)],
                     name = "",
                     labels = c(labelN4,labelZ)) +
  scale_fill_manual(values = my_colors[c(5,6)],
                     name = "",
                     labels = c(labelN4,labelZ)) +
  labs(x = bquote("Virus titer ("*log[10]~"PFU/ml)"),
       y = "") +
  guides(color = guide_legend(nrow = 3),
         fill = guide_legend(nrow = 3)) +
  theme_classic() +
  theme(axis.text = element_text(size = 22),
        axis.title.x = element_text(size = 27),
        axis.title.y = element_text(size = 27,
                                    margin = margin(r = 0)),
        legend.text = element_text(size = 22),
        legend.title = element_text(size = 22),
        legend.position = c(0.22,0.75),
        plot.title = element_text(size = 23),
        plot.margin = margin(t = 0, r = 0, b = 0, l = 0),
        legend.background = element_rect(color = NA, fill = NA))

p2l <- ggplot() + 
  geom_vline(aes(color = "Zika virus", xintercept = Z_50)) +
  geom_vline(aes(color = "Dengue virus 2b", xintercept = L2_50)) +
  geom_line(data = L2$envelope, aes(x = dose, y = fit, color = "Dengue virus 2b"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = L2$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                      fill = "Dengue virus 2b"), alpha = 0.2) +
  geom_line(data = Z$envelope, aes(x = dose, y = fit, color = "Zika virus"),
            linewidth = 1.3, alpha = 0.9) +
  geom_ribbon(data = Z$envelope, aes(x = dose, ymin = min_95, ymax = max_95,
                                     fill = "Zika virus"), alpha = 0.2) +
  geom_point(aes(x = L2_50, y = 0.5,
                 color = "Dengue virus 2b"),
             size = 4, alpha = 0.8) +
  geom_point(aes(x = Z_50, y = 0.5,
               color = "Zika virus"),
             size = 4, alpha = 0.8) +
  theme_classic() +
  scale_x_continuous(limits = c(0,8.15),
                     expand = expansion(add = c(0.05,0.1))) +
  scale_y_continuous(limits = c(0,1),
                     expand = expansion(add = c(0.01,0.03))) +
  scale_color_manual(values = my_colors[c(3,6)],
                     name = "",
                     labels = c(labelL2,labelZ)) +
  scale_fill_manual(values = my_colors[c(3,6)],
                     name = "",
                     labels = c(labelL2,labelZ)) +
  labs(x = "",
       y = "") +
  guides(color = guide_legend(nrow = 3),
         fill = guide_legend(nrow = 3)) +
  theme_classic() +
  ggtitle("D") +
  theme(axis.text = element_text(size = 22),
        axis.title.x = element_text(size = 27),
        axis.title.y = element_text(size = 27,
                                    margin = margin(r = 0)),
        legend.text = element_text(size = 22),
        legend.title = element_text(size = 22),
        legend.position = c(0.75,0.28),
        plot.title = element_text(size = 23),
        plot.margin = margin(t = 0, r = 0, b = 0, l = 0),
        legend.background = element_rect(color = NA, fill = NA))

pd <- (p1 | plot_spacer()) / (p2 | p2l) / (p3 | p4)
p <- (pz) / wrap_elements(full = pd)
p <- p + plot_layout(heights = c(1,1.2))

png(filename = "../output/figures/suppl/Figure_S4.png",
    width = 1300, height = 1900)
print(p)
dev.off()
```
